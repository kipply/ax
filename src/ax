#!/usr/bin/env python

import sys, os, time
import spotipy
from spotipy.oauth2 import SpotifyOAuth
import json
import subprocess

SCOPES = 'user-read-playback-state,user-modify-playback-state'
REDIRECT_URI = 'http://localhost:8888/callback'
CONFIG_PATH = os.getenv("HOME") + '/.config/ax/config.txt'
CACHE_PATH = os.getenv("HOME") + '/.config/ax/cache.json'
RC_PATHS = [os.getenv("HOME") + "/.zshrc"]

def auth_sp():
    try:
        client_id, client_secret, username = [x.rstrip() for x in open(CONFIG_PATH, 'r').readlines()]
    except Exception as e:
        print("Please run `ax auth` to setup authentication")
        sys.exit()
    sp = spotipy.Spotify(
        auth_manager=SpotifyOAuth(
            client_id,
            client_secret,
            REDIRECT_URI,
            scope=SCOPES,
            cache_path=CACHE_PATH
        )
    )
    return sp

def fetch_aliases():
    aliases = {}
    for rc in RC_PATHS:
        try:
            for line in open(rc, 'r').readlines():
                if line.startswith("alias"):
                    al = line[6:].split("=")
                    if al[1][0] in list("\"\'"):
                        al[1] = al[1][1:-2]
                    aliases[al[0]] = al[1].strip()
        except FileNotFoundError:
            pass
    return aliases

def setup():
    print("Welcome to AX!")
    print("You can find your Spotify username at https://www.spotify.com/us/account/overview/")
    print("You can set up a Spotify app at https://developer.spotify.com/dashboard/applications")
    print("Add `http://localhost:8888/callback` as a callback to the app.")
    print("If you've setup https://github.com/Rigellute/spotify-tui before, you can use credentials and the callback from that app")
    print("Your secrets will be stored in " + CONFIG_PATH)
    username = input("Spotify Username: ")
    client_id = input("Spotify App Client ID: ")
    client_secret = input("Spotify App Client Secret: ")

    try:
        os.mkdir("/".join(CONFIG_PATH.split("/")[:-1]))
    except FileExistsError:
        pass
    f = open(CONFIG_PATH, "w")
    f.write("{}\n".format(client_id))
    f.write("{}\n".format(client_secret))
    f.write("{}\n".format(username))
    f.close()

def execute_ax(sp):
    if sp.current_playback() == None or sp.current_playback()['is_playing'] == False:
        sp.start_playback()

    aliases = fetch_aliases()

    cmd = []
    for arg in sys.argv[1:]:
        if len(arg.split(" ")) > 1:
            arg =  "'" + arg.replace("'", "\\'") + "'"

        if arg in aliases:
            for x in aliases[arg].split(" "):
                cmd.append(x)
        else:
            cmd.append(arg)
    start_process_time = time.time()

    run = os.system(" ".join(cmd))

    if time.time() - start_process_time > 5:
        sp.pause_playback()

if len(sys.argv) > 1:
    if sys.argv[1] == "auth":
        setup()
    elif "noax" in sys.argv:
        aliases = fetch_aliases()
        cmd = []
        for arg in sys.argv[1:]:
            if len(arg.split(" ")) > 1:
                arg =  "'" + arg.replace("'", "\\'") + "'"

            if arg in aliases:
                for x in aliases[arg].split(" "):
                    cmd.append(x)
            elif arg != "noax":
                cmd.append(arg)
        start_process_time = time.time()

        run = os.system(" ".join(cmd))
    else:
        sp = auth_sp()
        execute_ax(sp)
else:
    print("Usage: ax {{COMMAND}}")
    sys.exit()
